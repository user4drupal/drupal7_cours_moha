<?php
function menus_entity_info() {
   $entity = array();
   $entity['menus'] = array(
	// On définit l'étiquette du type d'entité
	'label' => t('Menus'),
	// La table définie dans le especes.install
	'base table' => 'menus',
	'uri callback' => 'menus_uri',
	 //Le type d'entité contient des champs
	'fieldable' => TRUE,
	// On définit les clés liées à l'entité
	'entity keys' => array(
		// L'identifiant utilsée par entity_load
		'id' => 'mid',
		// La clé utilisé par field_attach pour charger les champs associés
		'bundle' => 'type'
	),
	// La clé pour les bundles
	'bundle keys' => array('bundle' => 'type'),
	'bundles' => array()
   );
//Emplacement pour les définitions des bundles Diner et Gouter
   // Bundle Diner
    $entity['menus']['bundle']['diner'] = array(
	'label' => t('Diner'),
	// On définit les éléments pour l'administration de ce type de menus
	'admin' => array(
		// Le chemin interne d'accès aux pages d'administration
		'path' => 'admin/menus/%menus_type',
		// Le chemin d'administration affiché aux utilisateurs
		'real path' => 'admin/menus/diner',
		// L'argument%especes_types doit être passé
		'bundle argument' => 2,
		// On ajoute la permission, ici on utilisera Administrer les nœuds
		'access arguments' => array('administer nodes')
	)	
    );
    
   // Bundle Goûter
    $entity['menus']['gouter'] = array(
        'label' => t('Goûter'),
        'admin' => array(
            'path' => 'admin/menus/%menus_type',
            'real path' => 'admin/menus/gouter',
            'bundle argument' => 2,
            'access arguments' => array('administer nodes')
        )
    );
   return $entity;
}

function menus_uri($menus) {
    return array('path' => 'menus/' .$menus->mid);
}

function menus_menu() {
    $items = array();
    
    $items['admin/menus'] = array(
        'title' => 'admin menus',
        'access arguments' => array('access content'),
        'page callback' => 'menus_admin',
        'file' => 'menus.pages.inc',
        'type' => MENU_NORMAL_ITEM
    );
    $items['admin/menus/%menus_type'] = array(
        'title callback' => 'menus_type_title',
        'title arguments' => array(2),
        'access arguments' => array('access content'),
        'page arguments' => array(2)
    );
    $items['admin/menus/%menus_type/add'] = array(
        'title' => 'add',
        'access arguments' => array('access content'),
        'type' => MENU_DEFAULT_LOCAL_TASK
    );
    $items['menus/%menus'] = array(
        'title callback' => 'menus_title',
        'title arguments' => array(1),
        'page callback' => 'menus_display_one',
        'page arguments' => array(1),
        'access arguments' => array('access content'),
        'file' => 'menus.pages.inc',
        'type' => MENU_CALLBACK
        );
    $items['menus/%menus/view'] = array(
        'title' => 'view',
        'access arguments' => array('access content'),
        'weight' => -3,
        'type' => MENU_DEFAULT_LOCAL_TASK
    );
    $items['menus/%menus/edit'] = array(
        'title' => 'edit',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('menus_edit', 1),
        'access arguments' => array ('access content'),
        'file' => 'menus.pages.inc',
        'type' => MENU_LOCAL_TASK
    );
    return $items;
}
/**
  * Chargement de l'argument pour %ùenus_type
  * Vérification de ce qui est passé comme argument
  * pour éviter une injection
**/
function menus_type_load($menus_type){
    switch($menus_type) {
        case 'diner':
        case 'gouter':
            return $menus_type;
        default :
            return FALSE;
    }
}
/**
  * On retourne le type de l'objet
**/
function menus_type_title($menus_type) {
    return $menus_type;
}

function menus_load($mid) {
	// On utilise la fonction entity_load qui va retrouver
	// l'entité avec son identifiant unique et le nom de la table
    $menus = entity_load('menus', array($mid));
    return $menus[$mid];
}

function menus_title($menus) {
    return $menus->name;
}