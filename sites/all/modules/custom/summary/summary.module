<?php
/*
* @file
* Display a Summary of your Drupal Installation.
*/
/**
* Implementation of hook_help()
*/
function summary_help($path, $arg) {
  switch ($path) {
    case 'admin/help#summary':
      return '<p>' . t('Sample module from Atelier Drupal book. This module
provide a summary page of your Drupal Installation.') . '</p>';
  }
}

/*
* Implementation of hook_menu()
*/
function summary_menu() {
  $items['summary'] = array(
    'title' => 'Summary of your site',
    'access arguments' => array(true),
    'type' => MENU_CALLBACK,  
    'page callback' => 'summary_content',
    );
  $items['admin/config/system/summary'] = array(
    'title' => t('Summary settings'),
    'description' => t('Summary configuration page'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('summary_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    );

return $items;
}

/*
* Content of the summary page
*/
function summary_content(){
  //List of all activated modules
  $summary_module_list = module_list();
  $summary_module_list = '<h3>'.variable_get('summary_module_label',t('Modules')).'</h3>'.implode($summary_module_list,', ');
  
  //List of vocabularies
  $list_vocabularies = taxonomy_get_vocabularies();
  $summary_list_vocabularies = '';
  foreach ($list_vocabularies as $vocab) {
    $summary_list_vocabularies .= $vocab->name.', ';
  }
  $summary_list_vocabularies = '<h3>'.variable_get('summary_taxonomy_label',t('Vocabularies')).'</h3>' .
  $summary_list_vocabularies;
  //List of node types  
  $summary_node_types = node_type_get_types();
  $summary_node_types_list = array();
  foreach ($summary_node_types as $node_type) {
  $summary_node_types_list[] = $node_type->name;
  }
  $summary_node_types_list = '<h3>'.variable_get('summary_content_types',t('Content types')).'</h3>' 
  .implode($summary_node_types_list, ', ');
 
  $display = variable_get('summary_display',array());
  $output = '';
  if ($display['module']) { $output .= $summary_module_list; }
  if ($display['vocabulary']) { $output .= $summary_list_vocabularies; }
  if ($display['content_type']) { $output .= $summary_node_types_list; }


  return $output;

}

/*
* Define the adminsitration form
*/
function summary_admin_settings(){
    $form['checkbox_visible'] = array(
    '#type' => 'fieldset',
    '#title' => t('Section visibility'),
    '#description' => t('Things to show for the summary'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    );

    $form['checkbox_visible']['summary_display'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Things to show for the summary'),
    '#description' => t('Check the things to show in the summary page'),
    '#options' => array('module' => t('Module list'), 'vocabulary' =>
    t('Vocabulary list'), 'content_type' => t('Content types')),
    '#default_value' => variable_get('summary_display',array('module','vocabulary')),
    );

    $form['labels'] = array(
    '#type' => 'fieldset',
    '#title' => t('Section visibility'),
    '#description' => t('Things to show for the summary'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    );

    $form['labels']['summary_module_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Label of the module section'),
    '#description' => t('Change the label of the module section'),
    '#default_value'=>variable_get('summary_module_label','Activate modules'),
    );
    
    $form['labels']['summary_taxonomy_label'] = array(
    '#type' => 'textfield',
    '#title' => t('Label of the taxonomy section'),
    '#description' => t('Change the label of the taxonomy section'),
    '#default_value'=>variable_get('summary_taxonomy_label','Taxonomy vocabularies'),
    );
    
    $form['labels']['summary_content_types'] = array(
    '#type' => 'textfield',
    '#title' => t('Label of the content types section'),
    '#description' => t('Change the label of the content types section'),
    '#default_value' => variable_get('summary_content_types','Content types'),
    );

  
  return system_settings_form($form);

}